{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ged-it\\\\rest_countries\\\\components\\\\Items.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport Item from \"./Item\";\n\nvar Items = /*#__PURE__*/function (_Component) {\n  _inherits(Items, _Component);\n\n  var _super = _createSuper(Items);\n\n  function Items() {\n    var _this;\n\n    _classCallCheck(this, Items);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      countries: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var countries;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://restcountries.eu/rest/v2/all\").then(function (res) {\n                return res.json().then(function (res) {\n                  return countries = res;\n                });\n              });\n\n            case 2:\n              _this.setState({\n                countries: countries\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Items, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.fetchData();\n      var countries = this.state.countries;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, countries && countries.map(function (el, index) {\n        return __jsx(Link, {\n          key: index,\n          href: {\n            pathname: \"/item\",\n            query: {\n              id: countries.alpha3Code\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, __jsx(Item, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return Items;\n}(Component);\n\nexport default Items;","map":{"version":3,"sources":["C:/Users/ged-it/rest_countries/components/Items.js"],"names":["React","Component","Link","Item","Items","countries","fetch","then","res","json","setState","fetchData","state","map","el","index","pathname","query","id","alpha3Code"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IACMC,K;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,SAAS,EAAE;AADL,K;;sIAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEJC,KAAK,CAAC,sCAAD,CAAL,CAA8CC,IAA9C,CAAmD,UAACC,GAAD;AAAA,uBACvDA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgB,UAACC,GAAD;AAAA,yBAAUH,SAAS,GAAGG,GAAtB;AAAA,iBAAhB,CADuD;AAAA,eAAnD,CAFI;;AAAA;AAKV,oBAAKE,QAAL,CAAc;AACZL,gBAAAA,SAAS,EAATA;AADY,eAAd;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BASH;AAAA;;AACP,WAAKM,SAAL;AADO,UAECN,SAFD,GAEe,KAAKO,KAFpB,CAECP,SAFD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGA,SAAS,IACRA,SAAS,CAACQ,GAAV,CAAc,UAACC,EAAD,EAAKC,KAAL;AAAA,eACZ,MAAC,IAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,IAAI,EAAE;AACJC,YAAAA,QAAQ,EAAE,OADN;AAEJC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,EAAE,EAAEb,SAAS,CAACc;AAAhB;AAFH,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADY;AAAA,OAAd,CAJJ,CADF;AAmBD;;;;EAnCiBlB,S;;AAqCpB,eAAeG,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Item from \"./Item\";\r\nclass Items extends Component {\r\n  state = {\r\n    countries: null,\r\n  };\r\n  fetchData = async () => {\r\n    let countries;\r\n    await fetch(\"https://restcountries.eu/rest/v2/all\").then((res) =>\r\n      res.json().then((res) => (countries = res))\r\n    );\r\n    this.setState({\r\n      countries,\r\n    });\r\n  };\r\n  render() {\r\n    this.fetchData();\r\n    const { countries } = this.state;\r\n    return (\r\n      <div>\r\n        {/* {countries && <Filters />}\r\n        <CountryWrapper> */}\r\n        {countries &&\r\n          countries.map((el, index) => (\r\n            <Link\r\n              key={index}\r\n              href={{\r\n                pathname: \"/item\",\r\n                query: { id: countries.alpha3Code },\r\n              }}\r\n            >\r\n              <Item />\r\n            </Link>\r\n          ))}\r\n        {/* </CountryWrapper> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}